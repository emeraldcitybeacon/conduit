FROM python:3.13-slim

# Prevent Python from writing .pyc files and buffering output
ENV PYTHONDONTWRITEBYTECODE=1 \
  PYTHONUNBUFFERED=1 \
  PIP_DISABLE_PIP_VERSION_CHECK=1 \
  NODE_VERSION=20.11.0

# System dependencies for Python, Node native module build, and Postgres client
RUN apt-get update && apt-get install -y --no-install-recommends \
  build-essential pkg-config python3-dev libpq-dev \
  gcc git curl ca-certificates gnupg \
  postgresql-client postgresql-contrib \
  && rm -rf /var/lib/apt/lists/*

# Install Node.js (version 20.x) and latest npm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
  apt-get install -y nodejs && \
  npm install -g npm@latest

# Verify Node.js installation
RUN node --version && npm --version

# Create a non-root user and set permissions for VSCode compatibility
RUN useradd -m -u 1000 vscode && \
  mkdir -p /home/vscode/.vscode-server/extensions && \
  chown -R vscode:vscode /home/vscode

WORKDIR /app
RUN chown -R vscode:vscode /app

USER vscode

# Copy all package + lock + config files and source code together before install
COPY --chown=vscode:vscode package.json package-lock.json* pyproject.toml README.md ./
COPY --chown=vscode:vscode src ./src

# Install Python dependencies, create output dirs, env vars, expose ports, etc.
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir --editable '.[dev]' --pre

# Install Node.js dependencies fresh inside the container (prevents @parcel/watcher platform specific binary issues)
RUN npm install

RUN mkdir -p static/css dist

ENV DJANGO_SETTINGS_MODULE=conduit.settings.dev \
  DEBUG=True \
  DJANGO_LOG_LEVEL=DEBUG

EXPOSE 8000

CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
